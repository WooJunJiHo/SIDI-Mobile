{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/anjuncheol/SIDI-Mobile/components/styles/TabBar.js\",\n  _this = this;\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState } from 'react';\nimport DarkMode from '../../components/styles/DarkMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TabBar = function TabBar(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    ui = _useState2[0],\n    setUI = _useState2[1];\n  var _useState3 = useState('Home'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    onScreen = _useState4[0],\n    setOnScreen = _useState4[1];\n  return _jsxDEV(View, {\n    style: [ui != false ? DarkMode.lightView : DarkMode.darkView, {\n      height: 80\n    }],\n    children: _jsxDEV(View, {\n      style: {\n        flexDirection: 'row',\n        width: '100%',\n        height: '100%',\n        backgroundColor: ui != false ? '#FFFFFF' : '#242424',\n        borderTopLeftRadius: 10,\n        borderTopRightRadius: 10,\n        borderWidth: 1,\n        borderColor: '#767676',\n        borderBottomWidth: 0\n      },\n      children: state.routes.map(function (route, index) {\n        var options = descriptors[route.key].options;\n        var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n        var isFocused = state.index === index;\n        var onPress = function onPress() {\n          var event = navigation.emit({\n            type: 'tabPress',\n            target: route.key\n          });\n          if (!isFocused && !event.defaultPrevented) {\n            setOnScreen(route.name);\n            navigation.navigate(route.name);\n          }\n        };\n        var iconName;\n        if (route.name === 'Home') {\n          onScreen == route.name ? iconName = require('../../assets/icons/blue-home_icon.png') : iconName = require('../../assets/icons/home-grayline.png');\n        } else if (route.name === 'Search') {\n          onScreen == route.name ? iconName = require('../../assets/icons/blue-search_icon.png') : iconName = require('../../assets/icons/search-grayline.png');\n        } else if (route.name === 'Chat') {\n          onScreen == route.name ? iconName = require('../../assets/icons/blue-chat_icon.png') : iconName = require('../../assets/icons/chat-grayline.png');\n        } else if (route.name === 'Alarm') {\n          onScreen == route.name ? iconName = require('../../assets/icons/blue-bell_icon.png') : iconName = require('../../assets/icons/bell-grayline.png');\n        } else if (route.name === 'MyPage') {\n          onScreen == route.name ? iconName = require('../../assets/icons/blue-man_icon.png') : iconName = require('../../assets/icons/man-grayline.png');\n        }\n        return _jsxDEV(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: onPress,\n            style: {\n              bottom: 10\n            },\n            children: _jsxDEV(Image, {\n              source: iconName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, _this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, _this);\n};\nexport default TabBar;","map":{"version":3,"names":["useState","DarkMode","jsxDEV","_jsxDEV","TabBar","_ref","state","descriptors","navigation","_useState","_useState2","_slicedToArray","ui","setUI","_useState3","_useState4","onScreen","setOnScreen","View","style","lightView","darkView","height","children","flexDirection","width","backgroundColor","borderTopLeftRadius","borderTopRightRadius","borderWidth","borderColor","borderBottomWidth","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","iconName","require","flex","justifyContent","alignItems","TouchableOpacity","bottom","Image","source","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["/Users/anjuncheol/SIDI-Mobile/components/styles/TabBar.js"],"sourcesContent":["import {\n    View,\n    TouchableOpacity,\n    Image\n} from 'react-native'\nimport { useState } from 'react';\n\n//다크 모드\nimport DarkMode from '../../components/styles/DarkMode'\n\n\nconst TabBar = ({ state, descriptors, navigation }) => {\n    //다크모드\n    const [ui, setUI] = useState(false)\n\n    //클릭 이벤트\n    const [onScreen, setOnScreen] = useState('Home')\n\n\n    return (\n        <View\n            style={[\n                ui != false ? DarkMode.lightView : DarkMode.darkView,\n                {\n                    height: 80,\n                }\n            ]}\n        >\n            <View\n                style={{\n                    flexDirection: 'row',\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor: ui != false ? '#FFFFFF' : '#242424', // 원하는 색상으로 변경\n                    borderTopLeftRadius: 10,\n                    borderTopRightRadius: 10,\n                    borderWidth: 1,\n                    borderColor: '#767676',\n                    borderBottomWidth: 0,\n                }}\n            >\n                {state.routes.map((route, index) => {\n                    const { options } = descriptors[route.key];\n                    const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n\n                    const isFocused = state.index === index;\n\n                    const onPress = () => {\n                        const event = navigation.emit({\n                            type: 'tabPress',\n                            target: route.key,\n                        });\n\n                        if (!isFocused && !event.defaultPrevented) {\n                            setOnScreen(route.name)\n                            navigation.navigate(route.name);\n                        }\n                    };\n\n\n                    // 아이콘 이름을 동적으로 가져오는 대신 직접 지정\n                    let iconName;\n                    if (route.name === 'Home') {\n                        onScreen == route.name ?  \n                        iconName = require('../../assets/icons/blue-home_icon.png') :\n                        iconName = require('../../assets/icons/home-grayline.png')\n                    } else if (route.name === 'Search') {\n                        onScreen == route.name ? \n                        iconName = require('../../assets/icons/blue-search_icon.png') :\n                        iconName = require('../../assets/icons/search-grayline.png')\n                    } else if (route.name === 'Chat') {\n                        onScreen == route.name ? \n                        iconName = require('../../assets/icons/blue-chat_icon.png') :\n                        iconName = require('../../assets/icons/chat-grayline.png')\n                    } else if (route.name === 'Alarm') {\n                        onScreen == route.name ? \n                        iconName = require('../../assets/icons/blue-bell_icon.png') :\n                        iconName = require('../../assets/icons/bell-grayline.png')\n                    } else if (route.name === 'MyPage') {\n                        onScreen == route.name ? \n                        iconName = require('../../assets/icons/blue-man_icon.png') :\n                        iconName = require('../../assets/icons/man-grayline.png')\n                    } \n\n\n\n\n                    return (\n                        <View\n                            key={index}\n                            style={{\n                                flex: 1,\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                            }}\n                        >\n                            {/* 탭에 따른 아이콘, 라벨 또는 커스텀 컴포넌트를 여기에 추가 */}\n                            <TouchableOpacity\n                                key={index}\n                                onPress={onPress}\n                                style={{bottom: 10,}}\n                            >\n                                <Image\n                                    source={iconName}\n                                />\n                            </TouchableOpacity>\n                        </View>\n                    );\n                })}\n            </View>\n        </View>\n    );\n};\n\n\nexport default TabBar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}